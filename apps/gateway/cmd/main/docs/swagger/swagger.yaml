basePath: /api/v1
definitions:
  github_com_bhtoan2204_gateway_internal_modules_auth_dto.LoginRequest:
    description: Login request payload
    properties:
      email:
        description: |-
          User email
          @Example john@example.com
        example: john@example.com
        type: string
      password:
        description: |-
          User password
          @Example secretpass123
        example: secretpass123
        minLength: 8
        type: string
      totp:
        description: |-
          Two-factor authentication code (optional)
          @Example 123456
        example: "123456"
        type: string
    required:
    - email
    - password
    type: object
  github_com_bhtoan2204_gateway_internal_modules_auth_dto.LogoutRequest:
    description: Logout request payload
    properties:
      refresh_token:
        description: |-
          Refresh token
          @Example eyJhbGciOiJIUzI1...
        example: eyJhbGciOiJIUzI1...
        type: string
    required:
    - refresh_token
    type: object
  github_com_bhtoan2204_gateway_internal_modules_auth_dto.RefreshTokenRequest:
    description: Refresh token request payload
    properties:
      refresh_token:
        description: |-
          Refresh token
          @Example eyJhbGciOiJIUzI1...
        example: eyJhbGciOiJIUzI1...
        type: string
    required:
    - refresh_token
    type: object
  github_com_bhtoan2204_gateway_internal_modules_comment_dto.CreateCommentRequest:
    properties:
      content:
        minLength: 1
        type: string
      parent_id:
        type: string
      video_id:
        type: string
    required:
    - content
    - video_id
    type: object
  github_com_bhtoan2204_gateway_internal_modules_user_dto.CreateUserRequest:
    properties:
      address:
        type: string
      birth_date:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 8
        type: string
      phone:
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - address
    - birth_date
    - email
    - first_name
    - last_name
    - password
    - phone
    - username
    type: object
  github_com_bhtoan2204_gateway_internal_modules_user_dto.UpdateProfileRequest:
    properties:
      address:
        type: string
      avatar:
        type: string
      birth_date:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone:
        type: string
    required:
    - id
    type: object
  github_com_bhtoan2204_gateway_internal_modules_video_dto.UploadVideoRequest:
    properties:
      content_type:
        type: string
      description:
        type: string
      file_key:
        type: string
      file_name:
        type: string
      file_size:
        type: integer
      is_public:
        type: boolean
      is_searchable:
        type: boolean
      title:
        type: string
    required:
    - content_type
    - file_key
    - file_name
    - file_size
    - title
    type: object
  response.ResponseData:
    properties:
      code:
        type: integer
      data: {}
      errors:
        items:
          type: string
        type: array
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: banhhaotoan2002@gmail.com
    name: Banh Hao Toan
  description: This is the API Gateway service for YouTube Clone project
  title: API Gateway Service
  version: "1.0"
paths:
  /comment-service/comments:
    post:
      consumes:
      - application/json
      description: Create a new comment on a video
      parameters:
      - description: Create Comment Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_bhtoan2204_gateway_internal_modules_comment_dto.CreateCommentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseData'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ResponseData'
      security:
      - BearerAuth: []
      summary: Create Comment
      tags:
      - comments
  /user-service/auth/2fa/setup:
    post:
      consumes:
      - application/json
      description: Setup 2FA
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: Setup 2FA
      tags:
      - auth
  /user-service/auth/2fa/verify:
    post:
      consumes:
      - application/json
      description: Verify 2FA
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: Verify 2FA
      tags:
      - auth
  /user-service/auth/login:
    post:
      consumes:
      - application/json
      description: Login to the system
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_bhtoan2204_gateway_internal_modules_auth_dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: Login
      tags:
      - auth
  /user-service/auth/logout:
    post:
      consumes:
      - application/json
      description: Logout from the system
      parameters:
      - description: Logout Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_bhtoan2204_gateway_internal_modules_auth_dto.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: Logout
      tags:
      - auth
  /user-service/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh Token
      parameters:
      - description: Refresh Token Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_bhtoan2204_gateway_internal_modules_auth_dto.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: Refresh Token
      tags:
      - auth
  /user-service/users:
    post:
      consumes:
      - application/json
      description: Create a new user with the given details
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_bhtoan2204_gateway_internal_modules_user_dto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: Create a new user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user details with the given information
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_bhtoan2204_gateway_internal_modules_user_dto.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: Update user details
      tags:
      - users
  /user-service/users/search:
    get:
      consumes:
      - application/json
      description: Search users with the given details
      parameters:
      - description: Search query
        in: query
        name: query
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Sort by
        in: query
        name: sort_by
        type: string
      - description: Sort direction
        in: query
        name: sort_direction
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: Search users
      tags:
      - users
  /video-service/videos:
    post:
      consumes:
      - application/json
      description: Upload a video to the server
      parameters:
      - description: Video details
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/github_com_bhtoan2204_gateway_internal_modules_video_dto.UploadVideoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: Upload a video
      tags:
      - video
  /video-service/videos/presigned-url:
    get:
      consumes:
      - application/json
      description: Get a presigned URL
      parameters:
      - description: URL
        in: query
        name: url
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: Get a presigned URL
      tags:
      - video
  /video-service/videos/presigned-url/download:
    get:
      consumes:
      - application/json
      description: Get a presigned URL
      parameters:
      - description: URL
        in: query
        name: url
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: Get a presigned URL
      tags:
      - video
  /video-service/videos/url:
    get:
      consumes:
      - application/json
      description: Get a video by URL
      parameters:
      - description: URL
        in: query
        name: url
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResponseData'
      summary: Get a video by URL
      tags:
      - video
swagger: "2.0"
