version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  mysql:
    image: mysql:latest
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --server-id=184054 --log-bin=mysql-bin --binlog-format=ROW

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  consul:
    image: hashicorp/consul:latest
    command: agent -dev -client=0.0.0.0
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    volumes:
      - ./config:/consul/config

  # prometheus:
  #   image: prom/prometheus:latest
  #   restart: always
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # UI
      - "14268:14268" # HTTP Thrift
      - "14250:14250" # gRPC
      - "6831:6831/udp" # UDP compact Thrift
      - "6832:6832/udp" # UDP binary Thrift
    # environment:
    #   - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    #   - JAEGER_SAMPLER_TYPE=const
    #   - JAEGER_SAMPLER_PARAM=1
    #   - JAEGER_AGENT_HOST=jaeger

  # zipkin:
  #   image: openzipkin/zipkin:latest
  #   environment:
  #     - JAVA_OPTS=-Xms1024m -Xmx1024m -XX:+ExitOnOutOfMemoryError
  #   restart: always
  #   ports:
  #     - "9411:9411"

  otel-collector:
    image: otel/opentelemetry-collector:0.120.0
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger
      # - zipkin

  gateway:
    build:
      context: ./apps/gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GO_ENV=development
    command: ["./gateway"]

  user:
    build:
      context: ./apps/user
      dockerfile: Dockerfile
    environment:
      - GO_ENV=development
    command: ["./user"]

  video:
    build:
      context: ./apps/video
      dockerfile: Dockerfile
    environment:
      - GO_ENV=development
    command: ["./video"]

  gateway-dev:
    build:
      context: ./apps/gateway
      dockerfile: Dockerfile-dev
    ports:
      - "8080:8080"
    environment:
      - GO_ENV=development
    command: ["go", "run", "./cmd/main/main.go"]
    volumes:
      - /usr/app:/Users/toanbanh/youtube-backend/gateway

  user-dev:
    build:
      context: ./apps/user
      dockerfile: Dockerfile-dev
    environment:
      - GO_ENV=development
    command: ["go", "run", "./cmd/main/main.go"]
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - /usr/app:/Users/toanbanh/youtube-backend/user

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=changeme
    volumes:
      - elastic_data:/usr/share/elasticsearch/data

  connect:
    image: debezium/connect:3.0.0.Final
    depends_on:
      - kafka
      - mysql
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:29092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - KEY_CONVERTER_SCHEMAS_ENABLE=false
      - VALUE_CONVERTER_SCHEMAS_ENABLE=false
    restart: always

  # scylla-node1:
  #   image: scylladb/scylla:latest
  #   container_name: scylla-node1
  #   command: --smp 1 --memory 750M --overprovisioned 1
  #   ports:
  #     - "9042:9042" # CQL Port
  #     - "9160:9160" # Thrift API
  #   volumes:
  #     - scylla_data1:/var/lib/scylla

  # scylla-node2:
  #   image: scylladb/scylla:latest
  #   container_name: scylla-node2
  #   command: --smp 1 --memory 750M --overprovisioned 1 --seeds=scylla-node1
  #   depends_on:
  #     - scylla-node1
  #   volumes:
  #     - scylla_data2:/var/lib/scylla

  # scylla-node3:
  #   image: scylladb/scylla:latest
  #   container_name: scylla-node3
  #   command: --smp 1 --memory 750M --overprovisioned 1 --seeds=scylla-node1
  #   depends_on:
  #     - scylla-node1
  #   volumes:
  #     - scylla_data3:/var/lib/scylla

  scylla:
    image: scylladb/scylla:latest
    ports:
      - "9042:9042"
      - "9160:9160"
    volumes:
      - scylla_data:/var/lib/scylla

  # Use this in the future: https://github.com/EventStore/EventStore
  event-store:
    image: eventstore/eventstore:24.10.4-bookworm-slim
    ports:
      - "2113:2113"
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_NODE_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore

volumes:
  # qdrant_data:
  #   driver: local
  mysql_data:
  elastic_data:
    driver: local
  scylla_data1:
  scylla_data2:
  scylla_data3:
  scylla_data:
  eventstore-volume-data:
  eventstore-volume-logs:
